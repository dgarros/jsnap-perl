do:
   check-dg-vm-cpu:     TRUE
   ver-component-all:   TRUE
   check-vrrp-status:     TRUE
   check-core:          TRUE
   check-alarms:        TRUE
   check-fte-links:     TRUE
   check-fabric-inv:    TRUE
   check-lacp:          TRUE
   ## check-fte-links-ext: TRUE

variables:
    minute:     600

## Verify that all components of the system are running the same version
ver-component-all:
    - command: show version component all
    - iterate: '//package-information[name="jbase"]'
      tests:
        - all-same: [ member-statut ]
          info:     All Components run the same version
          err:      [ '%s is running %s', '../host-name', 'comment' ]

## Verify Fabric inventory
## All node Group connected and configured 
## All node Devices connected and configured 
check-vrrp-status:
    - command: show vrrp summary
    
     ## Interface State 
    - iterate: '/rpc-reply/vrrp-information/vrrp-interface/interface-state'
      tests:
        - exists:       [ up ]
          info:         'All vrrp-interface are up'
          err:          ['VRRP interface %s is not in Established state', 'interface']

     ## Interface State 
    - iterate: '/rpc-reply/vrrp-information/vrrp-interface/interface-state'
      tests:
        - exists:       [ up ]
          info:         'All vrrp-interface are up'
          err:          ['VRRP interface %s is not in Established state', 'interface']

## Verify Fabric inventory
## All node Group connected and configured 
## All node Devices connected and configured 
check-fabric-inv:
    - command: show fabric administration inventory detail
    
     ## Node Group
    - iterate: '/rpc-reply/sfc-inventory/node-groups/node-group'
      tests:
        - exists:       [ connected ]
          info:         'All Node Groups are in connected State'
          err:          ['Node Group %s is not in connected state', 'node-group-name']
          
        - is-equal:     [ 'configuration', 'Configured']
          info:         'All Node Groups are in configured State'
          err:          ['Node Group %s is not in configured state', 'node-group-name', 'configuration']
          
        - greater-than: [ 'connection-time/@junos:seconds', 600]
          info:         'All Node Groups have been connected for more than 10 mins {{minute}}'
          err:          ['Node Group %s is connected since %s', 'node-group-name', 'connection-time/@junos:seconds']
 
     ## Node Device
    - iterate: '/rpc-reply/sfc-inventory/node-groups/node-group/node-group-node-devices/node-group-node-device'
      tests:
        - exists:       [ connected ]
          info:         'All Node Devices are in connected State'
          err:          ['Node Device %s is not in connected state', 'node-device-name']
          
        - exists:       [ 'configuration' ]
          info:         'All Node Devices are in configured State'
          err:          ['Node Device %s is not in configured state', 'node-device-name', 'configuration']
          
        - greater-than: [ 'connection-time/@junos:seconds', 600]
          info:         'All Node Devices have been connected for more than 10 mins'
          err:          ['Node Device %s is connected since %s', 'node-device-name', 'connection-time/@junos:seconds']
 
    ## Interconnect
    - iterate: '/rpc-reply/sfc-inventory/interconnect-devices/interconnect-device'
      tests:
        - exists:       [ connected ]
          info:         'All Interconnects are in connected State'
          err:          ['Interconnect %s is not in connected state', 'interconnect-device-name']
          min:           2
          
        - is-equal:     [ 'configuration', 'Configured']
          info:         'All Interconnects are in configured State'
          err:          ['Interconnect %s is in %s state', 'interconnect-device-name', 'configuration']
          min:          2
          
        - greater-than: [ 'connection-time/@junos:seconds', 600]
          info:         'All Interconnects have been connected for more than 10 mins'
          err:          ['Interconnect %s is connected since %s', 'interconnect-device-name', 'connection-time/@junos:seconds']
 
    ## Fabric Manager
    - iterate: '/rpc-reply/sfc-inventory/fabric-managers/fabric-manager'
      tests:
        - exists:       [ connected ]
          info:         'Fabric Manager is in connected State'
          err:          ['Fabric Manager %s is not in connected state', 'fabric-manager-name']
          
        - is-equal:     [ 'configuration', 'Configured']
          info:         'Fabric Manager is in configured State'
          err:          ['Fabric Manager %s is in %s state', 'fabric-manager-name', 'configuration']
          
        - greater-than: [ 'connection-time/@junos:seconds', 600]
          info:         'Fabric Manager has been connected for more than 10 mins'
          err:          ['Fabric Manager %s is connected since %s', 'fabric-manager-name', 'connection-time/@junos:seconds']
 
    ## Fabric Control
    - iterate: '/rpc-reply/sfc-inventory/fabric-controls/fabric-control'
      tests:   
        - exists:       [ connected ]
          info:         'Both Fabric Control are in connected State'
          err:          ['Fabric Control %s is not in connected state', 'fabric-control-name']
          min:          2
          max:          2
      
        - is-equal:     [ 'configuration', 'Configured']
          info:         'Both Fabric Control are in configured State'
          err:          ['Fabric Control %s is in %s state', 'fabric-control-name', 'configuration']
          min:          2
          max:          2
          
        - greater-than: [ 'connection-time/@junos:seconds', 600]
          info:         'All Fabric Control have been connected for more than 10 mins'
          err:          ['Fabric Control %s is connected since %s', 'fabric-control-name', 'connection-time/@junos:seconds']
          min:          2
          max:          2
    
    
    ## For each Node Group
    - iterate: '/rpc-reply/sfc-inventory/node-groups/node-group[connected]/node-group-name'
      with-each:
        - command: 'show chassis routing-engine node-group %s' 
        - iterate: '/rpc-reply/route-engine-information/route-engine'
          tests:      
            - less-than:    [ 'load-average-one', '0.6' ]
              info:         'Average CPU for last 1 min is inf at 60%'
              err:          [ '%s (%s) Average CPU for last 1 min is at %s %', 'slot', 'mastership-state', 'load-average-one' ]

            - less-than:    [ 'load-average-five', '0.4' ]
              info:         'Average CPU for last 5 min is inf at 40%'
              err:          [ '%s (%s) Average CPU for last 1 min is at %s %', 'slot', 'mastership-state', 'load-average-five' ]
              
            - greater-than: [ 'up-time/@seconds', '600' ]
              info:         'RE has been Up for more than 10 mins'
              err:          [ '%s (%s) is UP since %s sec', 'slot', 'mastership-state', 'up-time/@seconds' ]

            - greater-than: [ 'cpu-idle', '70' ]
              info:         'Average CPU idle is higher than 70%'
              err:          [ '%s (%s) Average CPU idle is at %s %', 'slot', 'mastership-state', 'cpu-idle' ]

    ## For each Node Device
    - iterate: '/rpc-reply/sfc-inventory/node-groups/node-group/node-group-node-devices/node-group-node-device[connected]/node-device-name'
      with-each:
        - command: 'show chassis fpc node-device %s'
        - iterate: '/rpc-reply/fpc-information/fpc'
          tests:      
            - is-equal:     [ 'state', 'Online' ]
              info:         'FPC is Online'
              err:          [ 'FPC is in state %s', 'state']

            - less-than:    [ 'cpu-total', '40' ]
              info:         'FPC CPU is inf at 40%'
              err:          [ 'FPC CPU is at %s %', 'cpu-total' ]
              
            - less-than:    [ 'memory-buffer-utilization', '600' ]
              info:         'FPC Memory utilization is inf at 60%'
              err:          [ 'FPC Memory utilization is at %s %', 'memory-buffer-utilization' ]
             
#          
## Will report all alarms with Level MAJOR or WARNING
#  -- except ALARMS related to PEM and  Fan Tray 
check-alarms:
    - command: show chassis alarms
    - iterate: '//alarm-detail[ not( (contains(alarm-description,"PEM")) or (contains(alarm-description,"Fan Tray")) )]'
      tests:
        - not-in:   [ alarm-class, Major, Warning ]
          info:     'No Major or Warning alarms (except PEM / Fan Tray)'
          err:      [ '%s : Alarm %s : %s', '../../re-name', 'alarm-class', 'alarm-description' ]

## Chech for coredumps but exclude file containing "pblogs" or "Install"         
check-core:
    - command: show system core-dumps component all repository core
    - iterate: '//dre-repository-component-dbgart-entry[ not( contains( dre-repository-component-dbgart-entry-name, "pblogs"))]'
      tests:      
        - is-equal: [ dre-repository-component-dbgart-entry-size, 0 ]
          info:     'No cores found (except pblogs / install)'
          err:      [ 'Core found generated on : %s for %s', 'dre-repository-component-dbgart-entry-date', 'dre-repository-component-dbgart-entry-name' ]
          min:      0

#
## Report interface with LACP enabled that are not in Collecting distributing state 
check-lacp:
    - command: show lacp interfaces
    - iterate: '/rpc-reply/lacp-interface-information-list/lacp-interface-information/lag-lacp-protocol'
      tests:
        - is-equal: [ lacp-mux-state, 'Collecting distributing' ]
          info:     'All LACP interfaces are in Collecting/distributing state'
          err:      [ 'Interface %s - %s is in state %s', '../lag-lacp-header/aggregate-name', 'name', 'lacp-mux-state' ]
          min:      0          

          
          
#         

